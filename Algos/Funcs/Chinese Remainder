#include<bits/stdc++.h>
using namespace std ;
typedef long long int ll;

const ll INF = 1e15;
const ll MOD = 1e9 + 7;
#define ttt cout<<"Test";

ll phi(ll x)
{
    ll res=x;
    for(ll i=2;i*i<=x;i++)
    {
        if(x%i==0)
        {
            while(x%i==0) x/=i;
            res-=res/i;
        }
    }
    if(x>1) res-=res/x;
    return res;
}

ll pow_mod(ll a, ll b, ll m)
{
    ll res=1;
    a=a%m;
    if(a==0) return 0;

    while (b>0)
    {
        if (b&1) res=(res*a)%m;
        b=b>>1;
        a=(a*a)%m;
    }
    return res;
}

ll mod_inv(ll a,ll m)
{
    return pow_mod(a,phi(m)-1,m);
}

ll gcd(ll a, ll b)
{
    if(b==0) return a;
    else return gcd(b,a%b);
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t; cin>>t;
    while(t--)
    {
        ll n; cin>>n;
        ll res=0,num[n],rem[n],prod=1,pp,f=0,rev;
        for(ll i=0;i<n;i++)
        {
            cin>>num[i];
            prod*=num[i];
            if(i==0) rev=num[i];
            if(i>0)
            {
                if(gcd(rev,num[i])>1) f=1;
            }
            rev=gcd(rev,num[i]);
        }
        for(ll i=0;i<n;i++) cin>>rem[i];
        if(f==1)
        {
            cout<<"-1\n";
            continue;
        }
        for(ll i=0;i<n;i++)
        {
            pp=prod/num[i];
            res+=(pp*rem[i]*mod_inv(pp,num[i]))%prod;
        }
        cout<<res;
    }
    return 0;
}
 
